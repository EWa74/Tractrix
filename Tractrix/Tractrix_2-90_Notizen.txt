



Dropdown-Menu um Objekte auszuwählen:
# https://blender.stackexchange.com/questions/30487/object-selection-box-with-eyedropper/159155#159155 
# https://blender.stackexchange.com/questions/159041/how-to-draw-object-selection-with-eyedropper-layout-using-python-script
# https://www.youtube.com/watch?v=fF9o8atwcT4&list=PLboXykqtm8dw-TCdMNrxz4cEemox0jBn0&index=22
        
#col.prop(scene, "name", icon = 'CURVE_BEZCURVE') # 2020-09-14 ... ongoing (Selection-Field fuer Traktor-Pfad)
#col.prop(scene, "prop")



def ReadCurve(objPath):
    '''
    #bpy.data.objects[objTrailer.name].location
    int_fMerker = bpy.data.scenes['Scene'].frame_current
    # 1. Schleife von start_frame to end_frame
    int_fStart = bpy.data.scenes['Scene'].frame_start
    int_fStop = bpy.data.scenes['Scene'].frame_end
      
    int_Count = int_fStop-int_fStart
    
    for int_fcurrent in range(1,int_Count,1):
        print("int_fcurrent: " + str(int_fcurrent))
        bpy.data.scenes['Scene'].frame_current= int_fcurrent
    bpy.data.scenes['Scene'].frame_current = int_fMerker
    '''
    
________________   
col.prop_search(scene, "prop", scene, "objects", icon = 'OBJECT_DATA', text = "Traktor")
objTraktor = bpy.data.scenes['Scene'].prop 
print('1. Tractrix_PT_Panel - objTraktor: ' + bpy.context.object.tractrix.traktor)
________________  
 https://docs.blender.org/api/blender_python_api_2_78_0/bpy.types.PropertyGroup.html?highlight=custom%20property

import bpy
from bpy.props import PointerProperty
 
class ObjectSettings(bpy.types.PropertyGroup): # self, context, 
    
    # Access it e.g. like
    # bpy.context.object.tractrix.trailer
    # bpy.context.tractrix.trailer
    
    traktor = bpy.props.StringProperty()
    trailer = bpy.props.StringProperty()
    traktorpath = bpy.props.StringProperty()
    trailerpath = bpy.props.StringProperty()

bpy.utils.register_class(ObjectSettings)

bpy.types.Object.tractrix = \
    bpy.props.PointerProperty(type=ObjectSettings) 
    
>>> bpy.data.objects[0].tractrix.trailer
________________
https://blender.stackexchange.com/questions/129473/typeerror-element-wise-multiplication-not-supported-between-matrix-and-vect

Blender 2.79:
Vtrans_abs = Mworld *Vtrans_rel
Blender 2.8:
Vtrans_abs = Mworld @Vtrans_rel
________________

    #290 bpy.context.scene.objects.active = obj
    bpy.context.view_layer.objects.active = obj
    oder
    bpy.context.active_object --> Achtung: read only
    oder
    bpy.context.object --> Achtung: read only
________________

class ObjectSettings(bpy.types.PropertyGroup):
    
    # Access it e.g. like
    # bpy.context.object.tractrix.trailer
    # >>> bpy.data.objects[0].tractrix.trailer
    
    #traktor: StringProperty(name="Traktor", default="")
    
    traktor = bpy.props.StringProperty(name="Traktor", default="a")
    trailer = bpy.props.StringProperty(name="Trailer", default="b")
    traktorpath = bpy.props.StringProperty(name="Traktor Path", default="c")
    trailerpath = bpy.props.StringProperty(name="Trailer Path", default="d")
    



bpy.utils.register_class(ObjectSettings)
bpy.types.Object.tractrix = bpy.props.PointerProperty(type=ObjectSettings) 
________________
bpy.context.scene.tractrix.
________________

action_name = bpy.data.objects[objEmpty_A6.name].animation_data.action.name



________________
        objTraktorPath = bpy.data.objects[bpy.context.scene.tractrix.traktorpath] 
        objTraktor = bpy.data.objects[bpy.context.scene.tractrix.traktor] 
        curTraktor = bpy.data.curves[objTraktorPath.data.name]
        
        objTrailerPath = bpy.data.objects[bpy.context.scene.tractrix.trailerpath]
        objTrailer = bpy.data.objects[bpy.context.scene.tractrix.trailer] 
        curTrailer = bpy.data.curves[objTrailerPath.data.name]
________________

def Parenting(Mother, Child):
    
    bpy.ops.object.select_all(action='DESELECT')
    Child.select_set(True)
    Mother.select_set(True)
    bpy.context.view_layer.objects.active = Mother
    # Parenting wieder herstellen    
    bpy.ops.object.parent_set(type='FOLLOW', xmirror=False, keep_transform=False)
    #bpy.ops.object.parent_set(type='FOLLOW', xmirror=False, keep_transform=True)
    bpy.ops.object.select_all(action='DESELECT')
    
def ClearParenting(Mother, Child):
    
    # - Deselect alle Objekte und in Objekte in richtiger Reihenfolge auswaehlen
    bpy.ops.object.select_all(action='DESELECT')
    Child.select_set(True)
    Mother.select_set(True)
    # - Parenting loesen    
    bpy.ops.object.parent_clear(type='CLEAR') # CLEAR_KEEP_TRANSFORM
    # - deselect all objects
    bpy.ops.object.select_all(action='DESELECT')
    # - Kurve selektieren
    #Mother.select = True
  
  ________________
   #action=bpy.data.actions[action_name]
#locID, rotID = FindFCurveID(Traktor, action)
#action.fcurves[locID[0]].keyframe_points[0].co 
 ________________
# create variable containing width
#bpy.types.Scene.pyramide_width = FloatProperty( name = "pyramide's width", default = 2.0, subtype = 'DISTANCE', unit = 'LENGTH', description = "Enter the pyramide's width!" )
#bpy.types.Scene.traktrix_curvetype = '1' 
________________
    # check poll() to avoid exception.
    '''
    if bpy.ops.object.mode_set.poll():
        bpy.ops.object.mode_set(mode='EDIT')
    '''
    
    #@classmethod
    #def poll(cls, context):
    #    return (bpy.context.active_object.type == 'CURVE') # Test, ob auch wirklich ein 'CURVE' Objekt aktiv ist.
    
  ________________
  
      '''
    traktor     = bpy.props.StringProperty(name="choose object"     , default="Traktor"    )
    trailer     = bpy.props.StringProperty(name="choose object"     , default="Trailer"    )
    traktorpath = bpy.props.StringProperty(name="choose nurbspath"  , default="TraktorPath")
    trailerpath = bpy.props.StringProperty(name="choose nurbspath"  , default="TrailerPath")
    #solver      = bpy.props.StringProperty(name="choose curve type"  , default= ["D const", "V const"])
    '''
    
  ________________
  ________________
  ________________
  ________________
  ________________
    
   